#!/usr/bin/env node

var program = require('commander');
var path    = require('path');
var fs      = require('fs');

var util = require('../lib/util');
var pkg  = require('../package');

program
  .usage('[folder]')
  .version(pkg.version)
  .option('-p, --prod', 'use production version')
  .parse(process.argv);

var destinationPath = program.args.shift() || '.';

// Copy templates files

var index   = util.loadTemplate('index.html');
var edicon  = util.loadTemplate('.editorconfig');
var ignore  = util.loadTemplate('.gitignore');
var css     = util.loadConcise('css/concise.css')
var cssMin  = util.loadConcise('css/concise.min.css')
var js      = util.loadConcise('js/concise.js');
var jsMin   = util.loadConcise('js/concise.min.js');

// Check if the folder is empty, confirm ovewrite and generate the app

(function generateApp(path) {
  util.emptyDirectory(path, function(empty) {
    if (empty || program.force) {
      createApp(path);
    } else {
      program.confirm('destination path is not empty, are you sure to continue?', function(ok) {
        if (ok) {
          process.stdin.destroy();
          createApp(path);
        } else {
          util.abort('Process canceled!')
        }
      });
    }
  });
})(destinationPath);

// Create all files to the project

function createApp(path) {
  util.mkdir(path, function() {
    util.mkdir(path + '/css');
    util.mkdir(path + '/images');
    util.mkdir(path + '/js');

    util.write(path + '/index.html', index);
    util.write(path + '/.editorconfig', edicon);
    util.write(path + '/.gitignore', ignore);

    if (program.prod) {
      util.write(path + '/css/concise.css', css)
      util.write(path + '/js/concise.js', js);
    } else {
      util.write(path + '/css/concise.min.css', cssMin)
      util.write(path + '/js/concise.min.js', jsMin);
    }
  });
}
